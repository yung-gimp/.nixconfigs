# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/profiles/qemu-guest.nix")
    ];

  boot.initrd.availableKernelModules = [ "ahci" "virtio_pci" "xhci_pci" "virtio_scsi" "sr_mod" "virtio_blk" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "none";
      fsType = "tmpfs";
      options = [ "defaults" "size=3G" "mode=755" ];
    };

  fileSystems."/nix" =
    { device = "/dev/disk/by-uuid/76f64915-9502-4dff-9ab4-ffb44ae59d70";
      fsType = "btrfs";
      options = [ "subvol=nix" ];
    };

  boot.initrd.luks.devices."nix".device = "/dev/disk/by-uuid/581d4071-f221-407d-9b05-0839d10970df";

  fileSystems."/swap" =
    { device = "/dev/disk/by-uuid/76f64915-9502-4dff-9ab4-ffb44ae59d70";
      fsType = "btrfs";
      options = [ "subvol=swap" ];
    };

  fileSystems."/nix/persist/home" =
    { device = "/dev/disk/by-uuid/19d88b03-fbaa-4835-af5a-6c8b8e9d4abf";
      fsType = "btrfs";
      options = [ "subvol=home" ];
    };

  boot.initrd.luks.devices."home".device = "/dev/disk/by-uuid/f9ce0a84-9376-4002-bfc9-008d3fbf5fb1";

  fileSystems."/nix/persist/etc/nixos" =
    { device = "viofs";
      fsType = "virtiofs";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/8DE7-8485";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

#  fileSystems."/etc/nixos" =
#    { device = "/nix/persist/etc/nixos";
#      fsType = "none";
#      options = [ "bind" ];
#    };
#
#  fileSystems."/var/log" =
#    { device = "/nix/persist/var/log";
#      fsType = "none";
#      options = [ "bind" ];
#    };

  swapDevices = [ {
    device = "/swap/.swapfile";
    size = 4*1024;
  } ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp2s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
}
